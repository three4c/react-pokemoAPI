{"version":3,"sources":["components/PokemonStatusName.tsx","components/PokemonStatusStyle.tsx","components/PokemonType.tsx","components/PokemonImage.tsx","components/FlavorText.tsx","components/PokemonId.tsx","components/PokemonName.tsx","components/PokemonResult.tsx","components/ErrorMessage.tsx","components/PokemonSearch.tsx","serviceWorker.ts","index.tsx"],"names":["PokemonStatusName","_ref","statusName","react_default","a","createElement","className","PokemonStatusStyle","statusBarStyle","style","PokemonType","typeBgColor","type","PokemonImage","imageBgColor","imageNumber","nameEn","src","concat","process","alt","FlavorText","flavorText","PokemonId","id","PokemonName","small","nameJp","span","PokemonResult","map","value","fromMin","fromMax","toMin","toMax","backgroundColor","_this2","this","_this$props","props","hp","attack","defense","spAttack","spDefense","speed","statusBarStyleItems","name","width","pokemonTypeItems","item","i","components_PokemonType","key","pokemonStatusItems","components_PokemonStatusName","components_PokemonStatusStyle","components_PokemonName","components_PokemonImage","components_FlavorText","components_PokemonId","Component","ErorrMessage","notFound","errorMessage","PokemonSearch","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","pokemonRef","onPokemonSearchButton","inputValue","current","checkPokemonNullCounter","checkPokemonCounter","_loop","Pokedex","japanese","slice","typeAry","k","j","Types","english","push","setState","fetch","then","res","status","json","data","flavor_text_entries","language","flavor_text","error","base","Attack","Defense","HP","Speed","existence","length","onEnterKey","e","keyCode","state","React","createRef","_this$state","ref","onKeyDown","placeholder","onClick","ErrorMessage_ErorrMessage","PokemonResult_PokemonResult","Boolean","window","location","hostname","match","ReactDOM","render","PokemonSearch_PokemonSearch","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.97be6fe0.chunk.js","sourcesContent":["import React from 'react'\n\ninterface PokemonStatusNameInterface {\n    statusName: string;\n}\n\nconst PokemonStatusName: React.SFC<PokemonStatusNameInterface> = ({ statusName }) => {\n    return (\n        <span className=\"PokemonResult__statusName\">{statusName}</span>\n    )\n}\n\nexport default PokemonStatusName;","import React from 'react'\n\ninterface PokemonStatusInterface {\n    statusBarStyle: any;\n}\n\nconst PokemonStatusStyle: React.SFC<PokemonStatusInterface> = ({ statusBarStyle }) => {\n    return (\n        <div className=\"PokemonResult__barArea\">\n            <div\n                className=\"PokemonResult__bar\"\n                style={statusBarStyle}\n            />\n        </div>\n    )\n}\n\nexport default PokemonStatusStyle;","import React from 'react'\n\ninterface PokemonTypeInterface {\n    type: string;\n    typeBgColor: any;\n}\n\nconst PokemonType: React.SFC<PokemonTypeInterface> = ({ typeBgColor, type }) => {\n    return (\n        <span className=\"PokemonResult__type\" style={typeBgColor}>{type}</span>\n    )\n}\n\nexport default PokemonType;","import React from 'react'\n\ninterface PokemonImageInterface {\n    imageBgColor: any;\n    imageNumber: string;\n    nameEn: string;\n}\n\nconst PokemonImage: React.SFC<PokemonImageInterface> = ({ imageBgColor, imageNumber, nameEn }) => {\n    return (\n        <div className=\"PokemonResult__image\" style={imageBgColor}>\n            <img\n                src={`${process.env.PUBLIC_URL}/image/${imageNumber +\n                    nameEn}.png`}\n                alt=\"検索したポケモンの画像\"\n            />\n        </div>\n    )\n}\n\nexport default PokemonImage;","import React from 'react'\n\ninterface FlavorTextInterface {\n    flavorText: string;\n}\n\nconst FlavorText: React.SFC<FlavorTextInterface> = ({ flavorText }) => {\n    return (\n        <div className=\"PokemonResult__flavorText\">\n            <p>{flavorText}</p>\n        </div>\n    )\n}\n\nexport default FlavorText;","import React from 'react'\n\ninterface PokemonIdInterface {\n    id: number;\n}\n\nconst PokemonId: React.SFC<PokemonIdInterface> = ({ id }) => {\n    return (\n        <div className=\"PokemonResult__id\">\n            <p>ぜんこくずかん No. {id}</p>\n        </div>\n    )\n}\n\nexport default PokemonId;","import React from 'react'\n\ninterface PokemonNameInterface {\n    small: string;\n    nameJp: string;\n    span: string;\n}\n\nconst PokemonName: React.SFC<PokemonNameInterface> = ({ small, nameJp, span }) => {\n    return (\n        <div className=\"PokemonResult__name\">\n            <small>{small}</small>\n            <strong>{nameJp}</strong>\n            <span>{span}</span>\n        </div>\n    )\n}\n\nexport default PokemonName;","import React, { Component } from \"react\";\nimport PokemonResultInterface from \"../interfaces/PokemonResult.interface\";\nimport PokemonStatusName from '../components/PokemonStatusName';\nimport PokemonStatusStyle from '../components/PokemonStatusStyle';\nimport PokemonType from '../components/PokemonType';\nimport PokemonImage from '../components/PokemonImage';\nimport FlavorText from '../components/FlavorText';\nimport PokemonId from '../components/PokemonId';\nimport PokemonName from '../components/PokemonName'\nimport \"../scss/PokemonResult.scss\";\n\nexport default class PokemonResult extends Component<PokemonResultInterface> {\n  private map = (\n    value: number,\n    fromMin: number,\n    fromMax: number,\n    toMin: number,\n    toMax: number\n  ): number => {\n    let result: number = 0;\n\n    result =\n      value <= fromMin\n        ? toMin\n        : value >= fromMax\n          ? toMax\n          : (() => {\n            let ratio: number = (toMax - toMin) / (fromMax - fromMin);\n            return (value - fromMin) * ratio + toMin;\n          })();\n\n    return result;\n  };\n\n  private typeBgColor = (type: string): any => {\n    switch (type) {\n      case \"ノーマル\":\n        return {\n          backgroundColor: \"#AEAEAE\"\n        };\n      case \"ほのお\":\n        return {\n          backgroundColor: \"#FFA765\"\n        }\n      case \"みず\":\n        return {\n          backgroundColor: \"#63C5F7\"\n        }\n      case \"でんき\":\n        return {\n          backgroundColor: \"#E6D400\"\n        }\n      case \"くさ\":\n        return {\n          backgroundColor: \"#9AC310\"\n        }\n      case \"こおり\":\n        return {\n          backgroundColor: \"#5FE9F6\"\n        }\n      case \"かくとう\":\n        return {\n          backgroundColor: \"#EE6968\"\n        }\n      case \"どく\":\n        return {\n          backgroundColor: \"#AB7ACA\"\n        }\n      case \"じめん\":\n        return {\n          backgroundColor: \"#C8A841\"\n        }\n      case \"ひこう\":\n        return {\n          backgroundColor: \"#64A7F1\"\n        }\n      case \"エスパー\":\n        return {\n          backgroundColor: \"#EC7FF4\"\n        }\n      case \"むし\":\n        return {\n          backgroundColor: \"#51CB5A\"\n        }\n      case \"いわ\":\n        return {\n          backgroundColor: \"#FAC728\"\n        }\n      case \"ゴースト\":\n        return {\n          backgroundColor: \"#746EB4\"\n        }\n      case \"ドラゴン\":\n        return {\n          backgroundColor: \"#FF8758\"\n        }\n      case \"あく\":\n        return {\n          backgroundColor: \"#6880D4\"\n        }\n      case \"はがね\":\n        return {\n          backgroundColor: \"#8089A4\"\n        }\n      case \"フェアリー\":\n        return {\n          backgroundColor: \"#FC7799\"\n        }\n    }\n  }\n\n  render() {\n\n\n    const { nameJp, nameEn, type, imageNumber, flavorText, id, hp, attack, defense, spAttack, spDefense, speed } = this.props;\n\n    const statusBarStyleItems = [\n      { name: 'HP', value: { width: this.map(hp, 0, 255, 0, 100) + \"%\" } },\n      { name: 'こうげき', value: { width: this.map(attack, 0, 255, 0, 100) + \"%\" } },\n      { name: 'ぼうぎょ', value: { width: this.map(defense, 0, 255, 0, 100) + \"%\" } },\n      { name: 'とくしゅ', value: { width: this.map(spAttack, 0, 255, 0, 100) + \"%\" } },\n      { name: 'とくぼう', value: { width: this.map(spDefense, 0, 255, 0, 100) + \"%\" } },\n      { name: 'すばやさ', value: { width: this.map(speed, 0, 255, 0, 100) + \"%\" } }\n    ];\n\n    const pokemonTypeItems = type.map((item, i) => (\n      <PokemonType key={i} typeBgColor={{ backgroundColor: this.typeBgColor(item).backgroundColor }} type={item} />\n    ));\n\n    const pokemonStatusItems = statusBarStyleItems.map((item, i) => (\n      <li key={i} className=\"PokemonResult__item\">\n        <PokemonStatusName statusName={item.name} />\n        <PokemonStatusStyle statusBarStyle={item.value} />\n      </li>\n    ))\n\n    return (\n      <div className=\"PokemonResult\">\n        <PokemonName small={\"キミが けんさくした ポケモンは…\"} nameJp={nameJp} span={\"だ！\"} />\n        <div className=\"PokemonResult__info\">\n          <PokemonImage imageBgColor={{ backgroundColor: this.typeBgColor(type[0]).backgroundColor }} imageNumber={imageNumber} nameEn={nameEn} />\n          <FlavorText flavorText={flavorText} />\n        </div>\n        <div className=\"PokemonResult__numberType\">\n          <PokemonId id={id} />\n          <div className=\"PokemonResult__right\">\n            {pokemonTypeItems}\n          </div>\n        </div>\n        <ul className=\"PokemonResult__list\">\n          {pokemonStatusItems}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ErrorMessageInterface from \"../interfaces/ErorrMessage.interface\";\nimport \"../scss/ErorrMessage.scss\";\n\nexport default class ErorrMessage extends Component<ErrorMessageInterface> {\n  render() {\n    const { notFound, errorMessage } = this.props;\n    return (\n      <div>\n        {notFound && (\n          <div className=\"ErrorMessage\">\n            <p>{errorMessage}</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PokemonSearchInterface from \"../interfaces/PokemonSearch.interface\";\nimport PokemonResult from \"./PokemonResult\";\nimport ErorrMessage from \"./ErrorMessage\";\nimport Pokedex from \"../json/pokedex.json\";\nimport Types from \"../json/types.json\";\nimport \"../scss/PokemonSearch.scss\";\n\nexport default class PokemonSearch extends Component<{}, PokemonSearchInterface> {\n  pokemonRef: React.RefObject<HTMLInputElement>;\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      id: null,\n      nameJp: \"\",\n      nameEn: \"\",\n      hp: null,\n      attack: null,\n      defense: null,\n      spAttack: null,\n      spDefense: null,\n      speed: null,\n      type: [],\n      flavorText: \"\",\n      imageNumber: \"\",\n      existence: false,\n      error: false,\n      notFound: false,\n      errorMessage: \"\"\n    };\n\n    this.pokemonRef = React.createRef();\n  }\n\n  private onPokemonSearchButton = (): void => {\n    const inputValue: string = this.pokemonRef.current.value;\n    let checkPokemonNullCounter: number = 0;\n    let checkPokemonCounter: number = 0;\n\n    for (let i in Pokedex) {\n      if (Pokedex[i].name.japanese === inputValue) {\n        const imageNumber: string = (\"000\" + Pokedex[i].id).slice(-3);\n\n        let typeAry: string[] = [];\n\n        for (let k in Pokedex[i].type) {\n          for (let j in Types) {\n            if (Pokedex[i].type[k] === Types[j].english) {\n              typeAry.push(Types[j].japanese);\n              this.setState({\n                type: typeAry\n              })\n            }\n          }\n        }\n\n        fetch(`https://pokeapi.co/api/v2/pokemon-species/${Pokedex[i].id}`).then(res => {\n          if (res.status !== 200) {\n            this.setState({\n              error: true,\n              flavorText:\n                Pokedex[i].name.japanese + \"の せつめいは ありません。\"\n            });\n            return;\n          }\n          res.json().then(data => {\n            let flavorText: string = \"\";\n            for (let k in data.flavor_text_entries) {\n              if (data.flavor_text_entries[k].language.name === \"ja-Hrkt\") {\n                flavorText = data.flavor_text_entries[k].flavor_text;\n              }\n            }\n            this.setState({\n              error: false,\n              flavorText: flavorText\n            });\n          });\n        });\n\n        this.setState({\n          id: Pokedex[i].id,\n          nameJp: Pokedex[i].name.japanese,\n          nameEn: Pokedex[i].name.english,\n          attack: Pokedex[i].base.Attack,\n          defense: Pokedex[i].base.Defense,\n          hp: Pokedex[i].base.HP,\n          spAttack: Pokedex[i].base[\"Sp. Attack\"],\n          spDefense: Pokedex[i].base[\"Sp. Defense\"],\n          speed: Pokedex[i].base.Speed,\n          imageNumber: imageNumber,\n          existence: true,\n          notFound: false\n        });\n      } else if (inputValue === \"\") {\n        checkPokemonNullCounter++;\n      } else {\n        checkPokemonCounter++;\n      }\n    }\n    if (checkPokemonNullCounter === Pokedex.length) {\n      this.setState({\n        notFound: true,\n        existence: false,\n        errorMessage: \"ポケモンの なまえを にゅうりょくしてください。\"\n      });\n    }\n\n    if (checkPokemonCounter === Pokedex.length) {\n      this.setState({\n        notFound: true,\n        existence: false,\n        errorMessage: inputValue + \" というポケモンを みつけることが できませんでした。\"\n      });\n    }\n  };\n\n  private onEnterKey = (e: any): void => {\n    if (e.keyCode === 13) {\n      this.onPokemonSearchButton();\n    }\n  }\n\n  render() {\n    const { existence, notFound, errorMessage, nameJp, nameEn, imageNumber, flavorText, id, type, hp, attack, defense, spAttack, spDefense, speed } = this.state;\n    return (\n      <div className={\"PokemonSearch-wrapper\" + (existence ? \"\" : \" PokemonSearch-wrapper--center\")}>\n        <div className=\"PokemonSearch\">\n          <h1 className=\"PokemonSearch__title\">POKEMON SEARCH</h1>\n          <div className=\"PokemonSearch__area\">\n            <input\n              className=\"PokemonSearch__input\"\n              type=\"text\"\n              ref={this.pokemonRef}\n              onKeyDown={this.onEnterKey}\n              placeholder=\"けんさくしたい ポケモンを にゅうりょくしよう\"\n            />\n            <button\n              className=\"PokemonSearch__button\"\n              onClick={this.onPokemonSearchButton}\n            >\n              けんさく\n            </button>\n          </div>\n          <ErorrMessage\n            notFound={notFound}\n            errorMessage={errorMessage}\n          />\n          {existence && (\n            <PokemonResult\n              nameJp={nameJp}\n              nameEn={nameEn}\n              imageNumber={imageNumber}\n              flavorText={flavorText}\n              id={id}\n              type={type}\n              hp={hp}\n              attack={attack}\n              defense={defense}\n              spAttack={spAttack}\n              spDefense={spDefense}\n              speed={speed}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/reset.scss';\nimport './scss/base.scss';\nimport PokemonSearch from '../src/components/PokemonSearch';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<PokemonSearch />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}